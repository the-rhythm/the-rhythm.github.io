<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[python技巧之字符串处理]]></title>
    <url>%2F2020%2F06%2F06%2Fpython%E6%8A%80%E5%B7%A7%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86%2F</url>
    <content type="text"><![CDATA[1.如何拆分含有多种分隔符的字符串Q: python str 的 split()方法只能对单一分隔符进行拆分，如果字符串中含多种分隔符，如何进行分隔？ A: 使用正则表达式 re.split() 123456import re# 分隔符是 ,|s = 'a,b,c|dd,e|ff|gg,hh,|ee'# 使用 re.split(),其中, [] 内部为分隔符，+表示一个或多个res = re.split('[,|]+',s)print(res) [&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;dd&apos;, &apos;e&apos;, &apos;ff&apos;, &apos;gg&apos;, &apos;hh&apos;, &apos;ee&apos;]2.判断字符串是否以某个字符串结尾或开头Q: 如何判断字符串是否以某个字符串结尾或多个字符串结尾或开头 A : 使用字符串方法 startswith 或 endswith 12345s = 'abcdefgwee'# 判断 s 是否以 abc 开头print(s.startswith('abc'))# 判断 s 是否以 wee 结尾print(s.endswith('wee')) True True如果要判断字符串是否以多个字符串结尾,需要用元组，下面的例子找出以.py和.java结尾的文件 123s = ['hello.py','hehe.js','wee.c','next.doc','xx.java','dwd.py']s1 = [ x for x in s if x.endswith(('.py','.java'))]print(s1) [&apos;hello.py&apos;, &apos;xx.java&apos;, &apos;dwd.py&apos;]3.如何调整字符串中的文本格式Q : 某日志文件，其中的日期为yyy-mm-dd格式，需要把其中的日期改为美国日期格式mm/dd/yyyy，该如何做？ A : 使用正则表达式匹配所有的日期，然后更改为目标格式,python 正则模块re中的sub 方法能替换字符串 1234567891011121314import res = '''2020-02-20 dosomething 2020-03-30 dosomething 2020-04-20 dosomething 2020-05-20 dosomething 2020-05-20 dosomething 2020-05-18 dosomething '''# 其中正则表达式 \d 表示整数 \d&#123;4&#125;表示4位整数 (\d&#123;4&#125;)表示分组s1 = re.sub('(\d&#123;4&#125;)-(\d&#123;2&#125;)-(\d&#123;2&#125;)',r'\2/\3/\1',s)# 也可以为每个分组起一个名字，使用 ?P&lt;name&gt;起名， /g&lt;name&gt; 引用 s2 = re.sub('(?P&lt;year&gt;\d&#123;4&#125;)-(?P&lt;month&gt;\d&#123;2&#125;)-(?P&lt;day&gt;\d&#123;2&#125;)',r'\g&lt;month&gt;/\g&lt;day&gt;/\g&lt;year&gt;',s)print(s1)print(s2) 02/20/2020 dosomething 03/30/2020 dosomething 04/20/2020 dosomething 05/20/2020 dosomething 05/20/2020 dosomething 05/18/2020 dosomething 02/20/2020 dosomething 03/30/2020 dosomething 04/20/2020 dosomething 05/20/2020 dosomething 05/20/2020 dosomething 05/18/2020 dosomething​ 4.字符串拼接Q: 如何高效率拼接多个小字符串 A : 使用字符串方法 join() 12345a = ['xiaoming','go','home']s1 = ' '.join(a)s2 = '-'.join(a)print(s1)print(s2) xiaoming go home xiaoming-go-home有时需要把列表元素全部转换为字符串然后拼接，可以使用生成器表达式,效率比较高 123b = [123,'shanghai',45,'tiger']s3 = ' '.join((str(x) for x in b))print(s3) 123 shanghai 45 tiger5.字符串对齐Q : 如何对字符串进行左右居中对齐 A1: 使用字符串方法 ljust() rjust() center()* 123456789101112s = 'abcd'# 第一个参数表示字符串最终宽度s1 = s.ljust(20)# 第二个参数表示填充字符s2 = s.ljust(20,'-')# 右对齐s3 = s.rjust(20)s4 = s.rjust(20,'-')print(s1)print(s2)print(s3)print(s4) abcd abcd---------------- abcd ----------------abcdA2:使用字符串的format方法,&lt;表示左对齐,&gt;表示右对齐,^表示居中对齐 12345678s5 ='&#123;0: &lt;20&#125;'.format(s)s6 = '&#123;0: &gt;20&#125;'.format(s)s7 = '&#123;0:-&gt;20&#125;'.format(s)s8 = '&#123;0:*^20&#125;'.format(s)print(s5)print(s6)print(s7)print(s8) abcd abcd ----------------abcd ********abcd********6.去掉字符串中不需要的字符Q: 如何去掉字符串中不需要的字符 A1:使用strip() lstrip() rstrip()方法去除两端字符 123s = ' xxxx@google.com 's1 = s.strip()print(s1) xxxx@google.com1234567s2 = '----xxxx@google.com-----'s3 = s2.strip('-')s4 = s2.lstrip('-')s5 = s2.rstrip('-')print(s3)print(s4)print(s5) xxxx@google.com xxxx@google.com----- ----xxxx@google.comA2: 使用字符串的方法 replace 或正则表达式 re.sub 1234# 如下，去掉s 中的 /ts = '/tabc/tefg/thjk/tmop/t's1 = s.replace('/t','')print(s1) abcefghjkmop12s2 = re.sub('[/t]','',s)print(s2) abcefghjkmop7.如何做字符映射Q: 有一个字符串，我们需要把字符串中的abc 映射为 123,该如何操作 A:使用字符串 translate方法 12345# 如下，如果我们需要把 abc 映射为 123s = 'abcyzfdeg'trans_table = str.maketrans('abc','123')s1 = s.translate(trans_table)print(s1) 123yzfdeg]]></content>
      <tags>
        <tag>python</tag>
        <tag>字符串</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[test]]></title>
    <url>%2F2019%2F08%2F12%2Ftest%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F08%2F12%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
