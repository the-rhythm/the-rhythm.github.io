<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>the-rhythm</title>
  
  <subtitle>记录我的学习之路</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-07T03:24:30.091Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>the-rhythm</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python技巧之字符串处理</title>
    <link href="http://yoursite.com/2020/06/06/python%E6%8A%80%E5%B7%A7%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/"/>
    <id>http://yoursite.com/2020/06/06/python技巧之字符串处理/</id>
    <published>2020-06-06T09:54:06.000Z</published>
    <updated>2020-06-07T03:24:30.091Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-如何拆分含有多种分隔符的字符串"><a href="#1-如何拆分含有多种分隔符的字符串" class="headerlink" title="1.如何拆分含有多种分隔符的字符串"></a>1.如何拆分含有多种分隔符的字符串</h3><p>Q: python str 的 split()方法只能对单一分隔符进行拆分，如果字符串中含多种分隔符，如何进行分隔？</p><p><strong><em>A: 使用正则表达式 re.split()</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment"># 分隔符是 ,|</span></span><br><span class="line">s = <span class="string">'a,b,c|dd,e|ff|gg,hh,|ee'</span></span><br><span class="line"><span class="comment"># 使用 re.split(),其中, [] 内部为分隔符，+表示一个或多个</span></span><br><span class="line">res = re.split(<span class="string">'[,|]+'</span>,s)</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><pre><code>[&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;dd&apos;, &apos;e&apos;, &apos;ff&apos;, &apos;gg&apos;, &apos;hh&apos;, &apos;ee&apos;]</code></pre><h3 id="2-判断字符串是否以某个字符串结尾或开头"><a href="#2-判断字符串是否以某个字符串结尾或开头" class="headerlink" title="2.判断字符串是否以某个字符串结尾或开头"></a>2.判断字符串是否以某个字符串结尾或开头</h3><p>Q: 如何判断字符串是否以某个字符串结尾或多个字符串结尾或开头</p><p><strong><em>A : 使用字符串方法 startswith 或 endswith</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'abcdefgwee'</span></span><br><span class="line"><span class="comment"># 判断 s 是否以 abc 开头</span></span><br><span class="line">print(s.startswith(<span class="string">'abc'</span>))</span><br><span class="line"><span class="comment"># 判断 s 是否以 wee 结尾</span></span><br><span class="line">print(s.endswith(<span class="string">'wee'</span>))</span><br></pre></td></tr></table></figure><pre><code>TrueTrue</code></pre><p>如果要判断字符串是否以多个字符串结尾,需要用元组，下面的例子找出以.py和.java结尾的文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = [<span class="string">'hello.py'</span>,<span class="string">'hehe.js'</span>,<span class="string">'wee.c'</span>,<span class="string">'next.doc'</span>,<span class="string">'xx.java'</span>,<span class="string">'dwd.py'</span>]</span><br><span class="line">s1 = [ x <span class="keyword">for</span> x <span class="keyword">in</span> s <span class="keyword">if</span> x.endswith((<span class="string">'.py'</span>,<span class="string">'.java'</span>))]</span><br><span class="line">print(s1)</span><br></pre></td></tr></table></figure><pre><code>[&apos;hello.py&apos;, &apos;xx.java&apos;, &apos;dwd.py&apos;]</code></pre><h3 id="3-如何调整字符串中的文本格式"><a href="#3-如何调整字符串中的文本格式" class="headerlink" title="3.如何调整字符串中的文本格式"></a>3.如何调整字符串中的文本格式</h3><p>Q : 某日志文件，其中的日期为yyy-mm-dd格式，需要把其中的日期改为美国日期格式mm/dd/yyyy，该如何做？</p><p><strong><em>A : 使用正则表达式匹配所有的日期，然后更改为目标格式,python 正则模块re中的sub 方法能替换字符串</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">s = <span class="string">'''2020-02-20 dosomething</span></span><br><span class="line"><span class="string">       2020-03-30 dosomething</span></span><br><span class="line"><span class="string">       2020-04-20 dosomething</span></span><br><span class="line"><span class="string">       2020-05-20 dosomething</span></span><br><span class="line"><span class="string">       2020-05-20 dosomething</span></span><br><span class="line"><span class="string">       2020-05-18 dosomething</span></span><br><span class="line"><span class="string">       '''</span></span><br><span class="line"><span class="comment"># 其中正则表达式 \d 表示整数 \d&#123;4&#125;表示4位整数 (\d&#123;4&#125;)表示分组</span></span><br><span class="line">s1 = re.sub(<span class="string">'(\d&#123;4&#125;)-(\d&#123;2&#125;)-(\d&#123;2&#125;)'</span>,<span class="string">r'\2/\3/\1'</span>,s)</span><br><span class="line"><span class="comment"># 也可以为每个分组起一个名字，使用 ?P&lt;name&gt;起名， /g&lt;name&gt; 引用 </span></span><br><span class="line">s2 = re.sub(<span class="string">'(?P&lt;year&gt;\d&#123;4&#125;)-(?P&lt;month&gt;\d&#123;2&#125;)-(?P&lt;day&gt;\d&#123;2&#125;)'</span>,<span class="string">r'\g&lt;month&gt;/\g&lt;day&gt;/\g&lt;year&gt;'</span>,s)</span><br><span class="line">print(s1)</span><br><span class="line">print(s2)</span><br></pre></td></tr></table></figure><pre><code>02/20/2020 dosomething       03/30/2020 dosomething       04/20/2020 dosomething       05/20/2020 dosomething       05/20/2020 dosomething       05/18/2020 dosomething02/20/2020 dosomething       03/30/2020 dosomething       04/20/2020 dosomething       05/20/2020 dosomething       05/20/2020 dosomething       05/18/2020 dosomething</code></pre><p>​    </p><h3 id="4-字符串拼接"><a href="#4-字符串拼接" class="headerlink" title="4.字符串拼接"></a>4.字符串拼接</h3><p>Q: 如何高效率拼接多个小字符串</p><p><strong><em>A : 使用字符串方法 join()</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="string">'xiaoming'</span>,<span class="string">'go'</span>,<span class="string">'home'</span>]</span><br><span class="line">s1 = <span class="string">' '</span>.join(a)</span><br><span class="line">s2 = <span class="string">'-'</span>.join(a)</span><br><span class="line">print(s1)</span><br><span class="line">print(s2)</span><br></pre></td></tr></table></figure><pre><code>xiaoming go homexiaoming-go-home</code></pre><p>有时需要把列表元素全部转换为字符串然后拼接，可以使用生成器表达式,效率比较高</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b = [<span class="number">123</span>,<span class="string">'shanghai'</span>,<span class="number">45</span>,<span class="string">'tiger'</span>]</span><br><span class="line">s3 = <span class="string">' '</span>.join((str(x) <span class="keyword">for</span> x <span class="keyword">in</span> b))</span><br><span class="line">print(s3)</span><br></pre></td></tr></table></figure><pre><code>123 shanghai 45 tiger</code></pre><h3 id="5-字符串对齐"><a href="#5-字符串对齐" class="headerlink" title="5.字符串对齐"></a>5.字符串对齐</h3><p>Q : 如何对字符串进行左右居中对齐</p><p><strong><em>A1: 使用字符串方法 ljust() rjust() center()*</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'abcd'</span></span><br><span class="line"><span class="comment"># 第一个参数表示字符串最终宽度</span></span><br><span class="line">s1 = s.ljust(<span class="number">20</span>)</span><br><span class="line"><span class="comment"># 第二个参数表示填充字符</span></span><br><span class="line">s2 = s.ljust(<span class="number">20</span>,<span class="string">'-'</span>)</span><br><span class="line"><span class="comment"># 右对齐</span></span><br><span class="line">s3 = s.rjust(<span class="number">20</span>)</span><br><span class="line">s4 = s.rjust(<span class="number">20</span>,<span class="string">'-'</span>)</span><br><span class="line">print(s1)</span><br><span class="line">print(s2)</span><br><span class="line">print(s3)</span><br><span class="line">print(s4)</span><br></pre></td></tr></table></figure><pre><code>abcd                abcd----------------                abcd----------------abcd</code></pre><p><strong><em>A2:使用字符串的format方法,&lt;表示左对齐,&gt;表示右对齐,^表示居中对齐</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">s5 =<span class="string">'&#123;0: &lt;20&#125;'</span>.format(s)</span><br><span class="line">s6 = <span class="string">'&#123;0: &gt;20&#125;'</span>.format(s)</span><br><span class="line">s7 = <span class="string">'&#123;0:-&gt;20&#125;'</span>.format(s)</span><br><span class="line">s8 = <span class="string">'&#123;0:*^20&#125;'</span>.format(s)</span><br><span class="line">print(s5)</span><br><span class="line">print(s6)</span><br><span class="line">print(s7)</span><br><span class="line">print(s8)</span><br></pre></td></tr></table></figure><pre><code>abcd                                abcd----------------abcd********abcd********</code></pre><h3 id="6-去掉字符串中不需要的字符"><a href="#6-去掉字符串中不需要的字符" class="headerlink" title="6.去掉字符串中不需要的字符"></a>6.去掉字符串中不需要的字符</h3><p>Q: 如何去掉字符串中不需要的字符</p><p><strong><em>A1:使用strip() lstrip() rstrip()方法去除两端字符</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">' xxxx@google.com  '</span></span><br><span class="line">s1 = s.strip()</span><br><span class="line">print(s1)</span><br></pre></td></tr></table></figure><pre><code>xxxx@google.com</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s2 = <span class="string">'----xxxx@google.com-----'</span></span><br><span class="line">s3 = s2.strip(<span class="string">'-'</span>)</span><br><span class="line">s4 = s2.lstrip(<span class="string">'-'</span>)</span><br><span class="line">s5 = s2.rstrip(<span class="string">'-'</span>)</span><br><span class="line">print(s3)</span><br><span class="line">print(s4)</span><br><span class="line">print(s5)</span><br></pre></td></tr></table></figure><pre><code>xxxx@google.comxxxx@google.com---------xxxx@google.com</code></pre><p><strong><em>A2: 使用字符串的方法 replace 或正则表达式 re.sub</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如下，去掉s 中的 /t</span></span><br><span class="line">s = <span class="string">'/tabc/tefg/thjk/tmop/t'</span></span><br><span class="line">s1 = s.replace(<span class="string">'/t'</span>,<span class="string">''</span>)</span><br><span class="line">print(s1)</span><br></pre></td></tr></table></figure><pre><code>abcefghjkmop</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s2 = re.sub(<span class="string">'[/t]'</span>,<span class="string">''</span>,s)</span><br><span class="line">print(s2)</span><br></pre></td></tr></table></figure><pre><code>abcefghjkmop</code></pre><h3 id="7-如何做字符映射"><a href="#7-如何做字符映射" class="headerlink" title="7.如何做字符映射"></a>7.如何做字符映射</h3><p>Q: 有一个字符串，我们需要把字符串中的abc 映射为 123,该如何操作</p><p><strong><em>A:使用字符串 translate方法</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如下，如果我们需要把 abc 映射为 123</span></span><br><span class="line">s = <span class="string">'abcyzfdeg'</span></span><br><span class="line">trans_table = str.maketrans(<span class="string">'abc'</span>,<span class="string">'123'</span>)</span><br><span class="line">s1 = s.translate(trans_table)</span><br><span class="line">print(s1)</span><br></pre></td></tr></table></figure><pre><code>123yzfdeg</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-如何拆分含有多种分隔符的字符串&quot;&gt;&lt;a href=&quot;#1-如何拆分含有多种分隔符的字符串&quot; class=&quot;headerlink&quot; title=&quot;1.如何拆分含有多种分隔符的字符串&quot;&gt;&lt;/a&gt;1.如何拆分含有多种分隔符的字符串&lt;/h3&gt;&lt;p&gt;Q: python 
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="字符串" scheme="http://yoursite.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="http://yoursite.com/2019/08/12/test/"/>
    <id>http://yoursite.com/2019/08/12/test/</id>
    <published>2019-08-12T08:30:35.000Z</published>
    <updated>2019-08-12T08:33:12.938Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/08/12/hello-world/"/>
    <id>http://yoursite.com/2019/08/12/hello-world/</id>
    <published>2019-08-12T07:48:22.016Z</published>
    <updated>2019-08-12T07:48:22.016Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
